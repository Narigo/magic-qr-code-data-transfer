name: Run checks

on: pull_request

jobs:
  pnpm-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Use cache for pnpm 🎁
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install pnpm packages 📦
        run: |
          corepack enable
          pnpm install --shamefully-hoist

  checks:
    runs-on: ubuntu-latest
    needs: [pnpm-install]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Use cache for pnpm 🎁
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install pnpm packages 📦
        run: |
          corepack enable
          pnpm install --shamefully-hoist

      - name: Run svelte-check 🔬
        run: |
          pnpm check

      - name: Run linter 🕵️
        run: |
          pnpm lint

      - name: Run unit tests 🧪
        run: |
          pnpm test:unit -- --coverage

  integration-install:
    runs-on: ubuntu-latest
    needs: [pnpm-install]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Use cache for pnpm 🎁
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install pnpm packages 📦
        run: |
          corepack enable
          pnpm install --shamefully-hoist

      - name: Use cache for Playwright 🎁
        id: cache-playwright
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Install Playwright packages 📦
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: |
          pnpx playwright install --with-deps

  integration-app:
    runs-on: ubuntu-latest
    needs: [integration-install]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Use cache for pnpm 🎁
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install pnpm packages 📦
        run: |
          corepack enable
          pnpm install --shamefully-hoist

      - name: Use cache for Playwright 🎁
        id: cache-playwright
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Install Playwright packages 📦
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps

      - name: Run integration tests 🏘
        run: |
          pnpm ci:test:integration

  integration-storybook:
    runs-on: ubuntu-latest
    needs: [integration-install]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Use cache for pnpm 🎁
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Install pnpm packages 📦
        run: |
          corepack enable
          pnpm install --shamefully-hoist

      - name: Use cache for Playwright 🎁
        id: cache-playwright
        uses: actions/cache@v2
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Install Playwright packages 📦
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps

      - name: Run component tests 🏠
        run: |
          pnpm ci:test:storybook
