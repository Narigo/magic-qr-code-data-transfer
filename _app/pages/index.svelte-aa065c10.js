import{S as ce,i as fe,s as ue,w as le,x as oe,y as ie,q as se,o as ne,B as re,k as p,e as r,t as u,m,c,a as f,h as d,d as t,g as n,J as i}from"../chunks/index-8fd04ea5.js";import{H as de}from"../chunks/Headline-33e94139.js";import{P as he}from"../chunks/PageWithNavigation-d800f4b0.js";function pe(E){let a;return{c(){a=u("Magic QR Code data transfer")},l(s){a=d(s,"Magic QR Code data transfer")},m(s,l){n(s,a,l)},d(s){s&&t(a)}}}function me(E){let a,s,l,_,$,w,S,O,x,X,P,h,I,Y,B,R,D,J,b,N,Q,W,C,y,j,M,v,L,z,A,g,F,T;return a=new de({props:{$$slots:{default:[pe]},$$scope:{ctx:E}}}),{c(){le(a.$$.fragment),s=p(),l=r("p"),_=u("It works without a server!"),$=p(),w=r("h2"),S=u("How will it work?"),O=p(),x=r("p"),X=u("To send data:"),P=p(),h=r("ol"),I=r("li"),Y=u("You enter your data in a big text area"),B=p(),R=r("li"),D=u(`It splits the text into multiple chunks that can be put into individual QR codes (QR codes can
			only be of length X-bytes)`),J=p(),b=r("li"),N=u("It creates individual QR codes based of the chunks, having a prefix like "),Q=r("code"),W=u("MQR<index>.<length>.<data-of-chunk>"),C=p(),y=r("p"),j=u("On the receiver:"),M=p(),v=r("ol"),L=r("li"),z=u(`There is a reader to use the webcam and shows you which QR codes were scanned until you have
			all of them scanned completely`),A=p(),g=r("li"),F=u("It shows the whole data in a big text area at the receiver")},l(e){oe(a.$$.fragment,e),s=m(e),l=c(e,"P",{});var o=f(l);_=d(o,"It works without a server!"),o.forEach(t),$=m(e),w=c(e,"H2",{});var H=f(w);S=d(H,"How will it work?"),H.forEach(t),O=m(e),x=c(e,"P",{});var K=f(x);X=d(K,"To send data:"),K.forEach(t),P=m(e),h=c(e,"OL",{});var k=f(h);I=c(k,"LI",{});var U=f(I);Y=d(U,"You enter your data in a big text area"),U.forEach(t),B=m(k),R=c(k,"LI",{});var V=f(R);D=d(V,`It splits the text into multiple chunks that can be put into individual QR codes (QR codes can
			only be of length X-bytes)`),V.forEach(t),J=m(k),b=c(k,"LI",{});var G=f(b);N=d(G,"It creates individual QR codes based of the chunks, having a prefix like "),Q=c(G,"CODE",{});var Z=f(Q);W=d(Z,"MQR<index>.<length>.<data-of-chunk>"),Z.forEach(t),G.forEach(t),k.forEach(t),C=m(e),y=c(e,"P",{});var ee=f(y);j=d(ee,"On the receiver:"),ee.forEach(t),M=m(e),v=c(e,"OL",{});var q=f(v);L=c(q,"LI",{});var te=f(L);z=d(te,`There is a reader to use the webcam and shows you which QR codes were scanned until you have
			all of them scanned completely`),te.forEach(t),A=m(q),g=c(q,"LI",{});var ae=f(g);F=d(ae,"It shows the whole data in a big text area at the receiver"),ae.forEach(t),q.forEach(t)},m(e,o){ie(a,e,o),n(e,s,o),n(e,l,o),i(l,_),n(e,$,o),n(e,w,o),i(w,S),n(e,O,o),n(e,x,o),i(x,X),n(e,P,o),n(e,h,o),i(h,I),i(I,Y),i(h,B),i(h,R),i(R,D),i(h,J),i(h,b),i(b,N),i(b,Q),i(Q,W),n(e,C,o),n(e,y,o),i(y,j),n(e,M,o),n(e,v,o),i(v,L),i(L,z),i(v,A),i(v,g),i(g,F),T=!0},p(e,o){const H={};o&1&&(H.$$scope={dirty:o,ctx:e}),a.$set(H)},i(e){T||(se(a.$$.fragment,e),T=!0)},o(e){ne(a.$$.fragment,e),T=!1},d(e){re(a,e),e&&t(s),e&&t(l),e&&t($),e&&t(w),e&&t(O),e&&t(x),e&&t(P),e&&t(h),e&&t(C),e&&t(y),e&&t(M),e&&t(v)}}}function _e(E){let a,s;return a=new he({props:{$$slots:{default:[me]},$$scope:{ctx:E}}}),{c(){le(a.$$.fragment)},l(l){oe(a.$$.fragment,l)},m(l,_){ie(a,l,_),s=!0},p(l,[_]){const $={};_&1&&($.$$scope={dirty:_,ctx:l}),a.$set($)},i(l){s||(se(a.$$.fragment,l),s=!0)},o(l){ne(a.$$.fragment,l),s=!1},d(l){re(a,l)}}}class xe extends ce{constructor(a){super(),fe(this,a,null,_e,ue,{})}}export{xe as default};
