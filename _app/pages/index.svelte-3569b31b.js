import{S as le,i as oe,s as ie,w as se,k as u,e as s,t as c,x as ne,m as p,c as n,a as r,h as f,d as t,y as re,g as i,J as l,q as ce,o as fe,B as de}from"../chunks/vendor-a0cacfa4.js";import{H as he}from"../chunks/Headline-080cdd27.js";function ue(q){let o;return{c(){o=c("Magic QR Code data transfer")},l(d){o=f(d,"Magic QR Code data transfer")},m(d,m){i(d,o,m)},d(d){d&&t(o)}}}function pe(q){let o,d,m,S,L,v,X,H,w,Y,O,h,x,B,D,k,J,j,y,z,E,A,C,$,F,M,_,I,G,K,R,N,T;return o=new he({props:{$$slots:{default:[ue]},$$scope:{ctx:q}}}),{c(){se(o.$$.fragment),d=u(),m=s("p"),S=c("It works without a server!"),L=u(),v=s("h2"),X=c("How will it work?"),H=u(),w=s("p"),Y=c("To send data:"),O=u(),h=s("ol"),x=s("li"),B=c("You enter your data in a big text area"),D=u(),k=s("li"),J=c(`It splits the text into multiple chunks that can be put into individual QR codes (QR codes can
		only be of length X-bytes)`),j=u(),y=s("li"),z=c("It creates individual QR codes based of the chunks, having something like "),E=s("code"),A=c("MQR<index>.<length>.<data-of-chunk>"),C=u(),$=s("p"),F=c("On the receiver:"),M=u(),_=s("ol"),I=s("li"),G=c(`There is a reader to use the webcam and shows you which QR codes were scanned until you have all
		of them scanned completely`),K=u(),R=s("li"),N=c("It shows the whole data in a big text area at the receiver")},l(e){ne(o.$$.fragment,e),d=p(e),m=n(e,"P",{});var a=r(m);S=f(a,"It works without a server!"),a.forEach(t),L=p(e),v=n(e,"H2",{});var Q=r(v);X=f(Q,"How will it work?"),Q.forEach(t),H=p(e),w=n(e,"P",{});var V=r(w);Y=f(V,"To send data:"),V.forEach(t),O=p(e),h=n(e,"OL",{});var b=r(h);x=n(b,"LI",{});var W=r(x);B=f(W,"You enter your data in a big text area"),W.forEach(t),D=p(b),k=n(b,"LI",{});var Z=r(k);J=f(Z,`It splits the text into multiple chunks that can be put into individual QR codes (QR codes can
		only be of length X-bytes)`),Z.forEach(t),j=p(b),y=n(b,"LI",{});var U=r(y);z=f(U,"It creates individual QR codes based of the chunks, having something like "),E=n(U,"CODE",{});var g=r(E);A=f(g,"MQR<index>.<length>.<data-of-chunk>"),g.forEach(t),U.forEach(t),b.forEach(t),C=p(e),$=n(e,"P",{});var ee=r($);F=f(ee,"On the receiver:"),ee.forEach(t),M=p(e),_=n(e,"OL",{});var P=r(_);I=n(P,"LI",{});var te=r(I);G=f(te,`There is a reader to use the webcam and shows you which QR codes were scanned until you have all
		of them scanned completely`),te.forEach(t),K=p(P),R=n(P,"LI",{});var ae=r(R);N=f(ae,"It shows the whole data in a big text area at the receiver"),ae.forEach(t),P.forEach(t)},m(e,a){re(o,e,a),i(e,d,a),i(e,m,a),l(m,S),i(e,L,a),i(e,v,a),l(v,X),i(e,H,a),i(e,w,a),l(w,Y),i(e,O,a),i(e,h,a),l(h,x),l(x,B),l(h,D),l(h,k),l(k,J),l(h,j),l(h,y),l(y,z),l(y,E),l(E,A),i(e,C,a),i(e,$,a),l($,F),i(e,M,a),i(e,_,a),l(_,I),l(I,G),l(_,K),l(_,R),l(R,N),T=!0},p(e,[a]){const Q={};a&1&&(Q.$$scope={dirty:a,ctx:e}),o.$set(Q)},i(e){T||(ce(o.$$.fragment,e),T=!0)},o(e){fe(o.$$.fragment,e),T=!1},d(e){de(o,e),e&&t(d),e&&t(m),e&&t(L),e&&t(v),e&&t(H),e&&t(w),e&&t(O),e&&t(h),e&&t(C),e&&t($),e&&t(M),e&&t(_)}}}class ve extends le{constructor(o){super();oe(this,o,null,pe,ie,{})}}export{ve as default};
